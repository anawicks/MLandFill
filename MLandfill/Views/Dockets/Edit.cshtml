@model MLandfill.ViewModel.DocketViewModel

@{
    ViewBag.Title = "Edit";
}
<h3 style="margin-left:45px;color:#1e2a89;">Waste Docket Edit</h3>

@{
    var dataT = ViewData["TruckCompRec"];//TruckCompRec
}
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>
<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.6/jquery.min.js" type="text/javascript"></script>
<link href="http://ajax.googleapis.com/ajax/libs/jqueryui/1.8/themes/base/jquery-ui.css" rel="Stylesheet" type="text/css" />

<link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
<script src="//code.jquery.com/jquery-1.10.2.js"></script>
<script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
<script src="~/Scripts/External/jquery.min.js"></script>
<script src="~/Scripts/External/jquery.validate.min.js"></script>
<script src="~/Scripts/External/jquery.validate.unobtrusive.min.js"></script>


<script language="javascript" type="text/javascript">
    function ddListChange1() {
        //$(document).ready(function () {
        //    $("#ddListChange").change(function () {
        alert($('#TruckCompId option:selected').val());
        var TruckCompSelected = $("#TruckCompId option:selected").val();

        alert(TruckCompSelected);
        $.get('@Url.Action("_TruckCompanyDetails")',
            { id: TruckCompSelected }, function (data) {
                $("#Gaduspan").html(data);
            });

    }
    $(document).ready(function () {
        // Gets called as soon as DOM is ready
        //code here
        //alert("Page Load DOM");
        var TruckCompSelected = $("#TruckCompId").val();
        $.get('@Url.Action("_TruckCompanyDetails")',
    { id: TruckCompSelected }, function (data) {
        $("#Gaduspan").html(data);
    });

        //alert(TruckCompSelected);
    });
    $(document).on("pageload", function () {
        ddListChange();
        alert("Page Load");
    });





    function ddListChange() {
        //$(document).ready(function () {
        //    $("#ddListChange").change(function () {

        // alert('.val() = ' + $('#truckingCompanies').val() + '  AND  html() = ' + $('#truckingCompanies option:selected').html() + '  AND .text() = ' + $('#truckingCompanies option:selected').text());



        var TruckCompSelected = $("#truckingCompanies option:selected").val();

        //alert(TruckCompSelected);
        $.get('@Url.Action("_TruckCompanyDetails")',
            { id: TruckCompSelected }, function (data) {
                $("#Gaduspan").html(data);
            });

    }
    $(document).ready(function () {
        $("#ddListChange33").change(function () {
            $("#log").ajaxError(function (event, jqxhr, settings, exception) {
                alert(exception);
            });

            var TruckCompSelected = $("select option:selected").first().text();
            $.get('@Url.Action("/Dockets/_TruckCompanyDetails")',
                { id: TruckCompSelected }, function (data) {
                    $("#target").html(data);
                });
        });
    });
</script>

<style>
    .marbot {
        margin-bottom: 12px;
    }

    body {
        padding-top: 40px;
    }

    .with-margin {
        margin-bottom: 10px;
    }

    .spacer5 {
        height: 5px;
    }

    div p {
        font-weight: 600;
    }

    .text-on-pannel {
        background: #fff none repeat scroll 0 0;
        height: auto;
        margin-left: 20px;
        padding: 3px 5px;
        position: absolute;
        margin-top: -47px;
        border: 1px solid #ff6a00;
        border-radius: 5px;
    }

    .panel {
        /* for text on pannel */
        margin-top: 21px !important;
    }

    .panel-body {
        padding-top: 27px !important;
        margin-left: 30px;
    }

    legend.scheduler-border {
        width: auto;
        border-bottom: none;
    }
</style>


@using (Html.BeginForm("Save", "Dockets"))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal"></div>
     
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.DocketId)
        @Html.HiddenFor(model => model.TruckCompId)
 
        <div class="panel panel-primary "> 
            <div class="panel-body">
                <h6 class="text-on-pannel text-primary"><strong class="text-uppercase">  Docket No : @Html.DisplayFor(model => model.DocketNo)  - Project Information:</strong></h6>

                <div class="row">
                    <div class="row row-grid">
                        <div class="col-md-2">
                            @Html.LabelFor(model => model.DocketNo, htmlAttributes: new { @class = "control-label col-md-2" })
                        </div>
                        <div class="col-md-4">
                            @*@Html.DisplayFor(model => model.DocketNo, new { htmlAttributes = new { @class = "form-control" } })*@
                            @Html.EditorFor(model => model.DocketNo, new { htmlAttributes = new { @class = "form-control" }, @readonly = true })
                            @Html.ValidationMessageFor(model => model.DocketNo, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-2">
                            @Html.LabelFor(model => model.WApApprovalcode, htmlAttributes: new { @class = "control-label col-md-2" })
                        </div>
                        <div class="col-md-4">
                            @Html.DropDownList("wasteApprovalNames", null, new { htmlAttributes = new { @class = "form-control" } })


                            @Html.ValidationMessageFor(model => model.WApApprovalId, "", new { @class = "text-danger" })
                        </div>


                        @*<div class="col-md-2"> 
                            @Html.LabelFor(model => model.WApSubId, htmlAttributes: new { @class = "control-label col-md-2" })
                        </div>
                        <div class="col-md-4">
                            @Html.DropDownListFor(model => model.WApSubId, new SelectList(Model.ddSubstance, "SubstanceId", "SubstanceName"), "Select Substance", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.WApSubId, "", new { @class = "text-danger" })
                        </div>*@


                        </div>
                    </div>
                    <div class="row">
                        <div class="row row-grid">
                            <div class="col-md-2">
                                @Html.LabelFor(model => model.WApSubId, htmlAttributes: new { @class = "control-label col-md-2" })
                            </div>
                            <div class="col-md-4">
                                @*@Html.DropDownList("substanceNames", null, new { htmlAttributes = new { @class = "form-control" } })*@
                                @Html.DisplayFor(model => model.SubstanceName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.WApSubId, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-2">
                                @Html.LabelFor(model => model.WApGeneratorId, htmlAttributes: new { @class = "control-label col-md-2" })
                            </div>
                            <div class="col-md-4">
                                @Html.DisplayFor(model => model.GeneratorName, new { htmlAttributes = new { @class = "form-control" } })
                                @*@Html.DropDownList("generatorNames", null, new { htmlAttributes = new { @class = "form-control" } })*@

                                @Html.ValidationMessageFor(model => model.WApGeneratorId, "", new { @class = "text-danger" })
                            </div>




                        </div>
                    </div>

                    <div class="row">
                        <div class="row row-grid">



                            <div class="col-md-2">
                                @Html.LabelFor(model => model.GenerLocationId, htmlAttributes: new { @class = "control-label col-md-2" })
                            </div>
                            <div class="col-md-4">
                                @Html.DisplayFor(model => model.GenerLocationLsd, new { htmlAttributes = new { @class = "form-control" } })
                                @*@Html.DropDownList("locationNames", null, new { htmlAttributes = new { @class = "form-control" } })*@
                                @Html.ValidationMessageFor(model => model.GenerLocationId, "", new { @class = "text-danger" })
                            </div>

                        </div>
                    </div>
                </div>

            </div>
        

       





        <div class="panel panel-primary ">
            <div class="panel-body">
                <h6 class="text-on-pannel text-primary"><strong class="text-uppercase">  Landfill Destination:</strong></h6>

                <div class="row">
                    <div class="row row-grid">
                        <div class="col-md-2">
                            @Html.LabelFor(model => model.DestinatedFor, htmlAttributes: new { @class = "control-label col-md-2" })
                        </div>
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.DestinatedFor, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DestinatedFor, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-2">
                            @Html.LabelFor(model => model.ScaleTicket, htmlAttributes: new { @class = "control-label col-md-2" })
                        </div>
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.ScaleTicket, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ScaleTicket, "", new { @class = "text-danger" })
                        </div>

                    </div>
                </div>
                <div class="row">
                    <div class="row row-grid">
                        <div class="col-md-2">
                            @Html.LabelFor(model => model.Gross, htmlAttributes: new { @class = "control-label col-md-2" })
                        </div>
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.Gross, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Gross, "", new { @class = "text-danger" })
                        </div>


                        <div class="col-md-2">
                            @Html.LabelFor(model => model.Tare, htmlAttributes: new { @class = "control-label col-md-2" })
                        </div>
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.Tare, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Tare, "", new { @class = "text-danger" })
                        </div>

                    </div>
                </div>
                <div class="row">
                    <div class="row row-grid">
                        <div class="col-md-2">
                            @Html.LabelFor(model => model.Net, htmlAttributes: new { @class = "control-label col-md-2" })
                        </div>
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.Net, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Net, "", new { @class = "text-danger" })
                        </div>



                    </div>
                </div>

            </div>
        </div>



        <div class="panel panel-primary ">
            <div class="panel-body">
                <h6 class="text-on-pannel text-primary"><strong class="text-uppercase">  Waste Location:</strong></h6>

                <div class="row">
                    <div class="row row-grid">
                        <div class="col-md-2">
                            @Html.LabelFor(model => model.Cell, htmlAttributes: new { @class = "control-label col-md-2" })
                        </div>
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.Cell, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Cell, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-2">
                            @Html.LabelFor(model => model.Grid, htmlAttributes: new { @class = "control-label col-md-2" })
                        </div>
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.Grid, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Grid, "", new { @class = "text-danger" })
                        </div>

                    </div>
                </div>
                <div class="row">
                    <div class="row row-grid">
                        <div class="col-md-2">
                            @Html.LabelFor(model => model.GridNo, htmlAttributes: new { @class = "control-label col-md-2" })
                        </div>
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.GridNo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.GridNo, "", new { @class = "text-danger" })
                        </div>


                        <div class="col-md-2">
                            @Html.LabelFor(model => model.Elevation, htmlAttributes: new { @class = "control-label col-md-2" })
                        </div>
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.Elevation, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Elevation, "", new { @class = "text-danger" })
                        </div>

                    </div>
                </div>
                <div class="row">
                    <div class="row row-grid">
                        <div class="col-md-2">
                            @Html.LabelFor(model => model.DateReceived, htmlAttributes: new { @class = "control-label col-md-2" })
                        </div>
                        <div class="col-md-4">

                            @Html.EditorFor(model => model.DateReceived, new { htmlAttributes = new { @class = "date-picker" } })



                            @Html.ValidationMessageFor(model => model.DateReceived, "", new { @class = "text-danger" })
                        </div>



                    </div>
                </div>

            </div>
        </div>


        <div class="panel panel-primary ">
            <div class="panel-body">
                <h6 class="text-on-pannel text-primary"><strong class="text-uppercase">  Transporter Information:</strong></h6>

                <div class="row">
                    <div class="row row-grid">
                        <div class="col-md-2">
                            @Html.LabelFor(model => model.TruckCompId, htmlAttributes: new { @class = "control-label col-md-2" })
                        </div>
                        <div class="col-md-4">


                            @Html.DropDownList("truckingCompanies", null, new { htmlAttributes = new { @class = "form-control" }, onchange = "ddListChange()" })


                            @Html.ValidationMessageFor(model => model.TruckCompId, "", new { @class = "text-danger" })

                        </div>

                        <div class="col-md-2">
                            @Html.LabelFor(model => model.DriverName, htmlAttributes: new { @class = "control-label col-md-2" })

                        </div>
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.DriverName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DriverName, "", new { @class = "text-danger" })
                        </div>

                        <span id="Gaduspan">
                            @{Html.RenderPartial("_TruckCompanyDetails", dataT); }
                        </span>

                    </div>
                </div>


            </div>
        </div>


        <div class="panel panel-primary ">
            <div class="panel-body">
                <h6 class="text-on-pannel text-primary"><strong class="text-uppercase">  Comments:</strong></h6>

                <div class="row">
                    <div class="row row-grid">
                        <div class="col-md-2">
                            @Html.LabelFor(model => model.Memo, htmlAttributes: new { @class = "control-label col-md-2" })
                        </div>
                        <div class="col-md-offset-2">
                            @Html.TextAreaFor(model => model.Memo, 5, 40, new { @class = "form-control required", style = "max-width:90% !important;" })
                            @Html.ValidationMessageFor(model => model.Memo, "", new { @class = "text-danger" })
                        </div>

                        @*@Html.TextAreaFor(model => model.Description, 10, 40, htmlAttributes: new { style = "width: 100%; max-width: 100%;" })*@
                        @*@Html.TextAreaFor(model => model.comments, new { @cols = "100", @rows = "8", @style = "width:100%;" })*@
                    </div>
                </div>

            </div>
        </div>









        <div>
            @Html.ActionLink("Back to List", "IndexGridMvc")

        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-warning btn-lg" />
            </div>
        </div>


   

    

                                }

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
